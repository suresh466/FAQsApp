// <auto-generated />
using FAQsApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FAQsApp.Migrations
{
    [DbContext(typeof(FaqContext))]
    [Migration("20240612205111_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FAQsApp.Models.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = "afc",
                            Name = "AFC"
                        },
                        new
                        {
                            CategoryId = "nfc",
                            Name = "NFC"
                        });
                });

            modelBuilder.Entity("FAQsApp.Models.Faq", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopicId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TopicId");

                    b.ToTable("Faqs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Answer = "Answer 1!",
                            CategoryId = "nfc",
                            Question = "Question 1?",
                            TopicId = "west"
                        },
                        new
                        {
                            Id = 2,
                            Answer = "Answer 2!",
                            CategoryId = "nfc",
                            Question = "Question 2?",
                            TopicId = "south"
                        },
                        new
                        {
                            Id = 3,
                            Answer = "Answer 3!",
                            CategoryId = "afc",
                            Question = "Question 3?",
                            TopicId = "north"
                        });
                });

            modelBuilder.Entity("FAQsApp.Models.Topic", b =>
                {
                    b.Property<string>("TopicId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TopicId");

                    b.ToTable("Topics");

                    b.HasData(
                        new
                        {
                            TopicId = "north",
                            Name = "North"
                        },
                        new
                        {
                            TopicId = "south",
                            Name = "South"
                        },
                        new
                        {
                            TopicId = "east",
                            Name = "East"
                        },
                        new
                        {
                            TopicId = "west",
                            Name = "West"
                        });
                });

            modelBuilder.Entity("FAQsApp.Models.Faq", b =>
                {
                    b.HasOne("FAQsApp.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("FAQsApp.Models.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId");
                });
#pragma warning restore 612, 618
        }
    }
}
